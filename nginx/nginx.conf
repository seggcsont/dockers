server {
    listen 80;
    return 301 https://$host$request_uri;
}
 
server {
        server_name seggcsont.ddns.net; #change this to your domain!
        listen 443 ssl;
 
        ssl_certificate           /etc/nginx/certs/bpi.crt;
        ssl_certificate_key       /etc/nginx/certs/bpi.key;
        ssl_prefer_server_ciphers       On;
        ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers                     'AES256+EECDH:AES256+EDH:!aNULL';
        resolver                        8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout                5s;
        ssl_stapling_verify             on;
        keepalive_timeout               180;
        add_header                    Strict-Transport-Security max-age=31536000;
        client_max_body_size 1024M;
 
#        location /transmission/ {
#                # Send traffic to the backend
#                proxy_pass http://transmission.local:9091/transmission/web/;
#                proxy_pass_header X-Transmission-Session-Id;
#                proxy_set_header X-Real-IP $remote_addr;
#                proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
#                proxy_set_header Host $host;
#                proxy_set_header X-Forwarded-Proto $remote_addr;
#                proxy_set_header X-Forwarded-Protocol $scheme;
#                proxy_redirect default;
# 
#                # Send websocket data to the backend as well
#                proxy_http_version 1.1;
#                proxy_set_header Upgrade $http_upgrade;
#                proxy_set_header Connection "upgrade";
#        }
#        location /rpc {
#            proxy_pass http://transmission.local:9091/transmission/rpc;
#        }
	location /expense-reporter/ {
		# Send traffic to the backend
                proxy_pass http://expense-reporter.local:5000/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Proto $remote_addr;
                proxy_set_header X-Forwarded-Protocol $scheme;
                proxy_redirect default;

                # Send websocket data to the backend as well
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
	}
	location /sms-parser/ {
		# Send traffic to the backend
                proxy_pass http://sms-parser.local:5000/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Proto $remote_addr;
                proxy_set_header X-Forwarded-Protocol $scheme;
                proxy_redirect default;

                # Send websocket data to the backend as well
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
	}
}
